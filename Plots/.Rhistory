View(tmp)
index <- tmp$Approach == "OCT"
View(tmp)
tmp[index]$numOfInstances <- tmp[index]$numOfInstances + max(subset(tmp_time, tmp_time$Approach=="OCT")$numOfInstances)
tmp$numOfInstances[index] <- tmp$numOfInstances[index] + max(subset(tmp_time, tmp_time$Approach=="OCT")$numOfInstances)
View(tmp)
tmp$numOfInstances[tmp$Approach == "OCT"] <- tmp$numOfInstances[tmp$Approach == "OCT"] + max(subset(tmp_time, tmp_time$Approach=="OCT")$numOfInstances)
tmp$numOfInstances[tmp$Approach == "BinOCT"] <- tmp$numOfInstances[tmp$Approach == "BinOCT"] + max(subset(tmp_time, tmp_time$Approach=="BinOCT")$numOfInstances)
tmp$numOfInstances[tmp$Approach == "FlowOCT"] <- tmp$numOfInstances[tmp$Approach == "FlowOCT"] + max(subset(tmp_time, tmp_time$Approach=="FlowOCT")$numOfInstances)
tmp$numOfInstances[tmp$Approach == "BendersOCT"] <- tmp$numOfInstances[tmp$Approach == "BendersOCT"] + max(subset(tmp_time, tmp_time$Approach=="BendersOCT")$numOfInstances)
tmp <- subset(data_train, data_train$regularization == FALSE &  !(data_train$status %in% c(2,101,102)))[,c('approach','gap')]#
tmp$gap <- format(round(tmp$gap, 2), nsmall = 5)
tmp <- tmp[order(tmp$gap),]
tmp <- tmp[order(tmp$approach),]
tmp$numOfInstances <- rowidv(tmp, cols=c("approach"))
tmp <- tmp[,c("approach","gap","numOfInstances")]
names(tmp) <- c("Approach","gap","numOfInstances")
tmp <- ddply(tmp, .(Approach, gap), function(x) x[which.max(x$numOfInstances),])
tmp$numOfInstances[tmp$Approach == "OCT"] <- tmp$numOfInstances[tmp$Approach == "OCT"] + max(subset(tmp_time, tmp_time$Approach=="OCT")$numOfInstances)
tmp$numOfInstances[tmp$Approach == "BinOCT"] <- tmp$numOfInstances[tmp$Approach == "BinOCT"] + max(subset(tmp_time, tmp_time$Approach=="BinOCT")$numOfInstances)
tmp$numOfInstances[tmp$Approach == "FlowOCT"] <- tmp$numOfInstances[tmp$Approach == "FlowOCT"] + max(subset(tmp_time, tmp_time$Approach=="FlowOCT")$numOfInstances)
tmp$numOfInstances[tmp$Approach == "BendersOCT"] <- tmp$numOfInstances[tmp$Approach == "BendersOCT"] + max(subset(tmp_time, tmp_time$Approach=="BendersOCT")$numOfInstances)
tmp[nrow(tmp) + 1,] = list("OCT","0",max(subset(tmp_time, tmp_time$Approach=="OCT")$numOfInstances))
tmp[nrow(tmp) + 1,] = list("BinOCT","0",max(subset(tmp_time, tmp_time$Approach=="BinOCT")$numOfInstances))
tmp[nrow(tmp) + 1,] = list("FlowOCT","0",max(subset(tmp_time, tmp_time$Approach=="FlowOCT")$numOfInstances))
tmp[nrow(tmp) + 1,] = list("BendersOCT","0",max(subset(tmp_time, tmp_time$Approach=="BendersOCT")$numOfInstances))
tmp$gap <- as.numeric(as.character(tmp$gap))
tmp$numOfInstances <- as.numeric(as.character(tmp$numOfInstances))
tmp$Approach  <- factor(tmp$Approach , levels = c("BendersOCT", "FlowOCT", "BinOCT","OCT"))
tmp <- tmp[order(tmp$gap),]
tmp <- tmp[order(tmp$Approach),]
tmp_gap <- tmp
rm(tmp)
View(tmp_gap)
colors <- c( brewer.pal(4, 'Set1')[3], brewer.pal(4, 'Set1')[2], brewer.pal(4, 'Set1')[4], brewer.pal(4, 'Set1')[1] ) #c("firebrick1 == 1","violetred==4","seagreen4==3","royalblue==2")
shapes <- c(15,16,17,4)
g1 <- ggplot(data = tmp_time, aes(x=solving_time, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
geom_point(aes(shape=Approach),size=2)+
labs(x="Time (s)", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g1)
g2 <- ggplot(data = tmp_gap, aes(x=gap*100, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
geom_point(aes(shape=Approach),size=2)+
labs(x="Gap (%)", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g2)
View(tmp_gap)
View(tmp_time)
View(tmp_gap)
gt1 <- ggplotGrob(g1)
gt2 <- ggplotGrob(g2)
newWidth = unit.pmax(gt1$widths[2:3], gt2$widths[2:3])
grid.arrange(gt1, gt2, ncol=2)
g1 <- ggplot(data = tmp_time, aes(x=solving_time, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
geom_point(aes(shape=Approach),size=2)+
labs(x="Time (s)", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g1)
g2 <- ggplot(data = tmp_gap, aes(x=gap*100, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
geom_point(aes(shape=Approach),size=2)+
labs(x="Gap (%)", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g2)
tmp_gap_1 <- tmp_gap
names(tmp_gap_1) <- c("Approach", "X", "numOfInstances")
tmp_time_1 <- tmp_time
names(tmp_time_1) <- c("Approach", "X", "numOfInstances")
tmp_gap_1 <- tmp_gap
names(tmp_gap_1) <- c("Approach", "X", "numOfInstances")
tmp_gap_1$X <- tmp_gap_1$X*3600 + 3600
tmp_time_1 <- tmp_time
names(tmp_time_1) <- c("Approach", "X", "numOfInstances")
tmp <- rbind(tmp_time_1, tmp_gap_1)
rm(tmp_time_1, tmp_gap_1)
View(tmp)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
geom_point(aes(shape=Approach),size=2)+
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600) +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam),
plot.background = element_blank()) #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) + theme_classic() + geom_boxplot() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) #+ theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam),
panel.grid.major = element_blank()) #+ theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam),
panel.grid.minor = element_blank()) #+ theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) #+ theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(legend.position = "right",text = element_text(size=14,family=fontfam),
axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 27),
legend.title = element_text(size = 30),
text = element_text(family=fontfam),
axis.title = element_text(size = 29)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 27),
legend.title = element_text(size = 30),
text = element_text(family=fontfam),
axis.title = element_text(size = 29)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam, size = 30),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
scale_x_continuous(breaks=c(0,1200,2400,3600), labels = c("1","2","3","4"))+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
tmp_gap_1 <- tmp_gap
names(tmp_gap_1) <- c("Approach", "X", "numOfInstances")
tmp_gap_1$X <- tmp_gap_1$X*3600 + 3601
tmp_time_1 <- tmp_time
names(tmp_time_1) <- c("Approach", "X", "numOfInstances")
tmp <- rbind(tmp_time_1, tmp_gap_1)
rm(tmp_time_1, tmp_gap_1)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
scale_x_continuous(breaks=c(0,1200,2400,3600), labels = c("1","2","3","4"))+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
tmp_gap_1 <- tmp_gap
names(tmp_gap_1) <- c("Approach", "X", "numOfInstances")
tmp_gap_1$X <- tmp_gap_1$X*3600 + 3605
tmp_time_1 <- tmp_time
names(tmp_time_1) <- c("Approach", "X", "numOfInstances")
tmp <- rbind(tmp_time_1, tmp_gap_1)
rm(tmp_time_1, tmp_gap_1)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
scale_x_continuous(breaks=c(0,1200,2400,3600), labels = c("1","2","3","4"))+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
0.2*3600 + 3605
0.4*3600 + 3605
0.3*3600 + 3605
0.5*3600 + 3605
0.6*3600 + 3605
1*3600 + 3605
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
scale_x_continuous(breaks=c(0,1200,2400,3600,3605,4685,5765,7205), labels = c("0","1200","2400","3600","0%","30%","60%","100%"))+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
scale_x_continuous(breaks=c(0,1200,2400,3605,4685,5765,7205), labels = c("0","1200","3600","0%","30%","60%","100%"))+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
g3 <- ggplot(data = tmp, aes(x=X, y=numOfInstances, group=Approach,color=Approach)) +
geom_line(size=0.5)+ #aes(linetype=Approach)
# geom_point(aes(shape=Approach),size=2)+
geom_vline(xintercept=3600, linetype = "dashed") +
labs(x="X", y = "Number of Instances Solved")+
scale_color_manual(values=colors)+
scale_shape_manual(values=shapes)+
scale_x_continuous(breaks=c(0,1200,2400,3605,4685,5765,7205), labels = c("0","1200","2400","0%","30%","60%","100%"))+
theme(axis.text = element_text(size = 25),
legend.position = "right", legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 50),
legend.title = element_text(size = 60),
text = element_text(family=fontfam),
axis.title = element_text(size = 40)) + theme_classic() #14
print(g3)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
data= read.csv('./../Results/FairOCT_Compass_10800_May_20.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
require(dplyr)
library(dplyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
# data1= read.csv('./../DataSets/compas.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data= read.csv('./../Results/July 13/compas_july_13.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
# data = data[data$sample %in% c(2) ,]
# data = data[data$fair.bound!=1,]
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data$sample <- as.factor(data$sample)
data$depth <- as.factor(data$depth)
data$fair.type <- as.factor(data$fair.type)
data$fair.bound <- as.factor(data$fair.bound)
for(i in c('CSP','EOpp')){#'SP','CSP','PE','EOpp','EOdds'
tmp_none <- data[data$fair.type == 'None',]
tmp_none$fair.type = i
data = rbind(data,tmp_none)
}
data <- data[data$fair.type!= 'None',]
rm(tmp_none)
data$data <- 'compas.csv'
View(data)
tmp <- data
tmp <- tmp %>%
group_by(approach,data,depth, fair.type, fair.bound) %>%
summarise(mean(train.acc),mean(test.acc),mean(sp.train.data), mean(sp.train.pred),
mean(sp.test.data),mean(sp.test.pred),
mean(csp.train.data), mean(csp.train.pred),
mean(csp.test.data),mean(csp.test.pred),
mean(pe.train.pred),
mean(pe.test.pred),
mean(EOpp.train.pred),
mean(EOpp.test.pred),
mean(EOdds.train.pred),
mean(EOdds.test.pred))
names(tmp) <- c("approach","data","depth","fair.type","fair.bound","train.acc",'test.acc',
"train.data.sp","train.pred.sp","test.data.sp","test.pred.sp",
"train.data.csp","train.pred.csp","test.data.csp","test.pred.csp",
"train.pred.pe","test.pred.pe",
"train.pred.EOpp","test.pred.EOpp",
"train.pred.EOdds","test.pred.EOdds")
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
library(dplyr)
library(plyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
data_train= read.csv('./../Results/paper results/train.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data_test= read.csv('./../Results/paper results/test.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data_train$sample <- as.factor(data_train$sample)
data_train$depth <- as.factor(data_train$depth)
data_test$sample <- as.factor(data_test$sample)
data_test$depth <- as.factor(data_test$depth)
#Let's sort the levels of approach such that the oldest method appears first
data_train$approach<- factor(data_train$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
data_test$approach<- factor(data_test$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
#Let's sort the levels of dataset with respect to their size
data_train$dataset <- factor(data_train$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
data_test$dataset <- factor(data_test$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE )
library(kableExtra)
library(png)
library(ggplot2)
library(reshape2)
library(egg)
require(tidyr)
library(dplyr)
library(plyr)
library(latex2exp)
# library(ggpubr)
library(data.table)
library(RColorBrewer)
library(MASS)
require(scales)
rm(list=ls())
data_train= read.csv('./../Results/paper results/train.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
data_test= read.csv('./../Results/paper results/test.csv', header=TRUE, sep=',', na.strings="", stringsAsFactors =TRUE)
forpres=TRUE
if (forpres){
fontfam = "sans"
} else {
fontfam = "serif"
}
figure_path = "./"
data_train$sample <- as.factor(data_train$sample)
data_train$depth <- as.factor(data_train$depth)
data_test$sample <- as.factor(data_test$sample)
data_test$depth <- as.factor(data_test$depth)
#Let's sort the levels of approach such that the oldest method appears first
data_train$approach<- factor(data_train$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
data_test$approach<- factor(data_test$approach, levels = c("OCT","BinOCT","FlowOCT","BendersOCT"))
#Let's sort the levels of dataset with respect to their size
data_train$dataset <- factor(data_train$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
data_test$dataset <- factor(data_test$dataset, levels = as.character(unique(data_train[order(data_train$nrow),]$dataset)))
View(data_train)
